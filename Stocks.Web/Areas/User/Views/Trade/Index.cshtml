@model StockTrade
@{
    ViewBag.holdingStyleColor = Model.ChangePercent > 0 ? "text-success" : "text-danger";
    ViewBag.SelectedStock = Model.StockSymbol;
}

<section class="trade-container">
    <div class="text-center mt-3" id="goup">
        <h2>Trading Page</h2>
        <h6>
            Search stock symbols to trade. For example, type GM for General Motors.
        </h6>
        <hr />
    </div>
    <div class="container">
        <div>
            <form method="get" id="searchStockForm" asp-route-id="@ViewBag.SelectedStock" autocomplete="off" class="form-inline row mt-3 justify-content-center selected-holding">
                <div class="col-3 px-1 autocomplete">
                    <input id="searchStockInput" type="text" value="@ViewBag.SelectedStock" autoFocus onChange="" class="form-control " placeholder="Enter stock symbol" />
                </div>
                <div class="col-1 px-1">
                    <button id="searchStockButton" onclick="return validateStockSearch()" type="submit" class="btn btn-primary w-100"> Submit </button>
                </div>
            </form>
        </div>
        @if (Model.StockSymbol != null)
        {
            <div class="selected-holding card my-4">
                <div class="card-head">
                    <h2>
                        @Model.StockName: @Model.StockSymbol
                    </h2>
                    <form method="post">
                        <input asp-for="StockSymbol" hidden>
                        <input id="price" asp-for="Price" hidden>
                        <input asp-for="StockName" hidden>
                        <div class="d-flex">
                            <button asp-action="BuyOrder" onclick="return canBuy()" class="col-4 btn btn-success mx-2"><i class="bi bi-arrow-up fw-bold me-2"></i>Buy Stocks</button>
                            <input asp-for="Quantity" value="1" class="text-center fw-bold form-control">
                            <button asp-action="SellOrder" onclick="return canSell()" class="col-4 btn btn-danger mx-2"><i class="bi bi-arrow-down fw-bold me-2"></i>Sell Stocks</button>
                        </div>
                    </form>
                </div>
                <hr />
                <div class="card-body">
                    <div class="price">
                        <strong>Current Price</strong>
                        <p class="mb-0 @ViewBag.holdingStyleColor">
                            <span class="current-price">
                                @Model.Price.ToString("c")
                            </span>
                        </p>
                        <small class="@ViewBag.holdingStyleColor">
                            Previous Closed: @Model.PreviousClosedPrice.ToString("c")
                        </small>
                    </div>
                    <div class="percent">
                        <strong>Percent Change</strong>
                        <p class="@ViewBag.holdingStyleColor">
                            @(Model.ChangePercent >= 0 ? "+" : "")@(Model.ChangePercent)%
                        </p>
                    </div>
                    <div class="change">
                        <strong>Daily Gain/Loss</strong>
                        <p class="@ViewBag.holdingStyleColor">
                            @Model.DailyChange.ToString("+$0.##;-$0.##")
                        </p>
                    </div>
                    <div class="shares-held">
                        <strong>Shares Held</strong>
                        <p>@Model.SharesOwned</p>
                    </div>
                </div>
            </div>
            <div class="text-center mt-3" id="goup">
                <hr class="pt-5" />
                <h3>Historical Data for @Model.StockSymbol</h3>
                <h6>
                    CandleStick chart for the past YEAR.
                </h6>
            </div>
            <div className="chart">
                <iframe width="100%" frameborder="0" height="500" src="https://widget.finnhub.io/widgets/stocks/chart?symbol=@(Model.StockSymbol)&watermarkColor=%231db954&backgroundColor=%23222222&textColor=white">
                </iframe>
            </div>
        }
    </div>
    <div id="popular-stocks">
        <hr class="mt-5 mb-3" />
        <div class="text-center">
            <h3>Popular Stocks</h3>
        </div>
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    </div>
</section>



@section Header{
    <link rel="stylesheet" href="~/css/trade.css" />
    <link rel="stylesheet" href="~/css/autocomplete.css" />
}
@section Scripts{
    <script src="~/js/trade.js"></script>
    <script src="~/js/autocomplete.js"></script>
    <partial name="_ValidationScriptsPartial" />

    <script>
        window.onload = function () {
            LoadPopularStocks('@Url.Action("Top25PopularStock", "Api")', "popular-stocks")
        };
    </script>
    <script>
        var stocks;
        // Populate autocomplete
        $(document).ready(function () {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetStocksNamesList", "Api")',
                dataType: 'json',
                success: function (result) {
                    stocks = result
                    autocomplete(document.getElementById("searchStockInput"), stocks);
                },
                error: function (error) {
                    console.log(error);
                }
            });
            $("#searchStockInput").keyup(function (event) {
                if (event.keyCode === 13) {
                    $("#searchStockButton").click();
                }
            });
        });

        // Validate stock search
        function validateStockSearch() {
            var stockSymbol = $("#searchStockInput").val();
            if (stockSymbol == "") {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Please enter a stock symbol!',
                })
                return false;
            }
            if (!stocks.includes(stockSymbol)) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Please enter a valid stock symbol!',
                })
                return false;
            }
            var form = document.getElementById("searchStockForm");
            form.action = "/User/Trade/Index/" + stockSymbol;
            return true;
        }

    </script>

    @if (Model.StockSymbol != null)
    {
        <script>
            setupWebhook("@Model.StockSymbol");
            // Custom validation with sweet alert for buying and selling stocks
            function canSell() {
                var quantity = $("#Quantity").val();
                if (quantity == "") {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Please enter a quantity!',
                    })
                    return false;
                }
                if (quantity > @Model.SharesOwned) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'You do not own that many shares!',
                    })
                    return false;
                }
                return true;
            }
            function canBuy() {
                var quantity = $("#Quantity").val();
                if (quantity == "") {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Please enter a quantity!',
                    })
                    return false;
                }
                if (quantity * @Model.Price > @ViewBag.Balance) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'You do not have enough money!',
                    })
                    return false;
                }
                return true;
            }
        </script>
    }
}